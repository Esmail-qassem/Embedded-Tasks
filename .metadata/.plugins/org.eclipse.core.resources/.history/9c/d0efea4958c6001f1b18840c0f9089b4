#include "../inc/TrafficLightsControl_interface.h"
#include "../inc/TrafficLightsControl_config.h"
#include "../inc/TrafficLightsControl_private.h"
#include "../../../Services/Stack/Stack.h"

Stack TrafficStack;
int static timer_counter=0;
static TrafficLightState current_state = STATE_GREEN;

int variable;

void HandleGreenState(void)
{
	 DIO_SetPinVal(DIO_PORTC, DIO_Pin0, DIO_LOW);
    DIO_SetPinVal(DIO_PORTC, DIO_Pin2, DIO_HIGH);
}
void HandleRedState(void)
{
	DIO_SetPinVal(DIO_PORTC, DIO_Pin1, DIO_LOW);
	DIO_SetPinVal(DIO_PORTC, DIO_Pin0, DIO_HIGH);
}
void HandleyellowState(void)
{
	DIO_SetPinVal(DIO_PORTC, DIO_Pin2, DIO_LOW);
    DIO_SetPinVal(DIO_PORTC, DIO_Pin1, DIO_HIGH);
}
void test(void) {
	timer_counter++;
	  if (timer_counter ==1 )
	    {// Green light ON

	    }
	    else if (timer_counter == 6)
	    { // Yellow light ON
	    	Stack_Pop(&TrafficStack,&variable);
	    }
	    else if (timer_counter== 11)
	    {  // Red light ON
	    	Stack_Pop(&TrafficStack,&variable);

	    }
	    else if (timer_counter== 16)
	    {
	        Stack_Push(&TrafficStack,Yellow);
	        Stack_Push(&TrafficStack,Red);
	    	CLCD_voidSendCommand(1);//clear the display
	    	timer_counter=0b00;

	    }


}

void TrafficLightInit(void)
{
	PORT_voidInit();
    CLCD_voidInit();
    GIE_Enable();
    TIMER1_voidInit();
	TIMER1_voidSetChannelACompMatch(31250);
	TIMER1_CTCASetCallBck(&test);
	/*stack initialization*/
    Stack_Creation(&TrafficStack);
    Stack_Push(&TrafficStack,Red);
    Stack_Push(&TrafficStack,Yellow);
    Stack_Push(&TrafficStack,Green);
    HandleGreenState();

}

void TrafficLightMainFunction(void)
{
	CLCD_voidGoToXY(0,0);
	CLCD_voidSendString("Traffic light");
	CLCD_voidGoToXY(1,0);
	CLCD_voidWriteNumber(timer_counter);
    if (TrafficStack.top != NULL) {
        CLCD_voidGoToXY(1, 5);
        CLCD_voidWriteNumber(TrafficStack.top->entry);
    }

}
