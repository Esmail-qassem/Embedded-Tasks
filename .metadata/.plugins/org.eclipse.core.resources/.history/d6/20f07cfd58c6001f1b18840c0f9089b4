#include "../inc/TrafficLightsControl_interface.h"
#include "../inc/TrafficLightsControl_config.h"
#include "../inc/TrafficLightsControl_private.h"
#include "../../../Services/Stack/Stack.h"

Stack TrafficStack;
int static timer_counter=0;
static Traffic_State current_state = Green;
int variable;
#define GREEN_DURATION  5
#define YELLOW_DURATION 2
#define RED_DURATION    5
void HandleGreenState(void)
{
	 DIO_SetPinVal(DIO_PORTC, DIO_Pin0, DIO_LOW);
    DIO_SetPinVal(DIO_PORTC, DIO_Pin2, DIO_HIGH);
}
void HandleRedState(void)
{
	DIO_SetPinVal(DIO_PORTC, DIO_Pin1, DIO_LOW);
	DIO_SetPinVal(DIO_PORTC, DIO_Pin0, DIO_HIGH);
}
void HandleyellowState(void)
{
	DIO_SetPinVal(DIO_PORTC, DIO_Pin2, DIO_LOW);
    DIO_SetPinVal(DIO_PORTC, DIO_Pin1, DIO_HIGH);
}
void test(void) {
	timer_counter++;
	switch(current_state)
	{
	case Green :
	{
		if(timer_counter>=GREEN_DURATION)
		{
			current_state = Yellow;
			timer_counter=0;
			HandleyellowState();
		}
		break;

	}
	case Yellow:
	{
		if(timer_counter>=YELLOW_DURATION)
		{
			current_state = Red;
			timer_counter=0;

		}

	}
	case Red :
	{

	}
	}



}

void TrafficLightInit(void)
{
	PORT_voidInit();
    CLCD_voidInit();
    GIE_Enable();
    TIMER1_voidInit();
	TIMER1_voidSetChannelACompMatch(31250);
	TIMER1_CTCASetCallBck(&test);
	/*stack initialization*/
    Stack_Creation(&TrafficStack);
    Stack_Push(&TrafficStack,Red);
    Stack_Push(&TrafficStack,Yellow);
    Stack_Push(&TrafficStack,Green);
    HandleGreenState();

}

void TrafficLightMainFunction(void)
{
	CLCD_voidGoToXY(0,0);
	CLCD_voidSendString("Traffic light");
	CLCD_voidGoToXY(1,0);
	CLCD_voidWriteNumber(timer_counter);
    if (TrafficStack.top != NULL) {
        CLCD_voidGoToXY(1, 5);
        CLCD_voidWriteNumber(TrafficStack.top->entry);
    }

}
